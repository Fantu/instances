#!/usr/bin/python3

import os
from glob import glob
from shutil import rmtree
from subprocess import check_output as call


basedirs = ('/srv/debomatic-amd64', '/srv/debomatic-i386',
            '/srv/debomatic-arm64', '/srv/debomatic-armel',
            '/srv/debomatic-armhf', '/srv/debomatic-mips',
            '/srv/debomatic-mips64el', '/srv/debomatic-mipsel',
            '/srv/debomatic-powerpc', '/srv/debomatic-ppc64el',
            '/srv/debomatic-s390x')

def purge_chroot(distribution, basedir, empty):
    architecture = basedir.split('-')[1]
    chroots = call(['/usr/bin/schroot', '--all-chroots', '-l'])
    sessions = call(['/usr/bin/schroot', '--all-sessions', '-l'])
    chroot = '%s-%s-debomatic' % (distribution, architecture)
    if chroot in chroots.decode('utf-8'):
        if chroot not in sessions.decode('utf-8'):
            for basedir in ('/etc/schroot/chroot.d', '/etc/sbuild/chroot'):
                for pattern in ('%s*' % chroot, '*-%s-%s-debomatic*' %
                                (architecture, distribution)):
                    for dir in glob(os.path.join(basedir, pattern)):
                        os.unlink(dir)
            rmtree(os.path.join(basedir, distribution, disttribution))
    if empty:
        rmtree('/srv/debomatic-%s/%s' % (architecture, distribution))

for basedir in basedirs:
    if os.path.isdir(basedir):
        for distribution in os.listdir(basedir):
            if os.path.isdir(os.path.join(basedir, distribution)):
                empty = True
                dir = os.path.join(basedir, distribution, 'pool')
                if os.path.isdir(dir):
                    if os.listdir(dir):
                        empty = False
                    purge_chroot(distribution, basedir, empty)
